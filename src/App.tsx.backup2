import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import "./App.css";
import ChatInterface from "./components/ChatInterface.tsx";
import CaseAnalysis from "./components/CaseAnalysis.tsx";
import ThemeToggle from "./components/ThemeToggle.tsx";
import { useTheme } from "./providers/ThemeProvider.tsx";
import {
	MessageSquare,
	Scale,
} from "lucide-react";

function App() {
	const [activeTab, setActiveTab] = useState<"chat" | "analysis">("chat");

	useTheme();

	return (
		<div className="min-h-screen bg-background">
			{/* Top Navigation */}
			<nav className="border-b border-border bg-card/50 backdrop-blur-xl sticky top-0 z-50">
				<div className="max-w-7xl mx-auto px-6 py-4">
					<div className="flex items-center justify-between">
						{/* Logo & Tabs */}
						<div className="flex items-center gap-8">
							<motion.div 
								className="flex items-center gap-3"
								whileHover={{ scale: 1.02 }}
							>
								<div className="w-8 h-8 rounded-lg bg-primary flex items-center justify-center">
									<Scale className="w-5 h-5 text-white" />
								</div>
								<span className="text-xl font-semibold">LexAI</span>
							</motion.div>
							
							{/* Tabs */}
							<div className="flex gap-1 bg-muted/50 rounded-lg p-1">
								<motion.button
									onClick={() => setActiveTab("chat")}
									className={`relative px-6 py-2 rounded-md text-sm font-medium transition-colors ${
										activeTab === "chat"
											? "text-foreground"
											: "text-muted-foreground hover:text-foreground"
									}`}
									whileTap={{ scale: 0.98 }}
								>
									{activeTab === "chat" && (
										<motion.div
											layoutId="activeTab"
											className="absolute inset-0 bg-background rounded-md shadow-sm"
											transition={{ type: "spring", bounce: 0.2, duration: 0.6 }}
										/>
									)}
									<span className="relative flex items-center gap-2">
										<MessageSquare className="w-4 h-4" />
										Chat
									</span>
								</motion.button>
								
								<motion.button
									onClick={() => setActiveTab("analysis")}
									className={`relative px-6 py-2 rounded-md text-sm font-medium transition-colors ${
										activeTab === "analysis"
											? "text-foreground"
											: "text-muted-foreground hover:text-foreground"
									}`}
									whileTap={{ scale: 0.98 }}
								>
									{activeTab === "analysis" && (
										<motion.div
											layoutId="activeTab"
											className="absolute inset-0 bg-background rounded-md shadow-sm"
											transition={{ type: "spring", bounce: 0.2, duration: 0.6 }}
										/>
									)}
									<span className="relative flex items-center gap-2">
										<Scale className="w-4 h-4" />
										Analysis
									</span>
								</motion.button>
							</div>
						</div>

						{/* Theme Toggle */}
						<ThemeToggle />
					</div>
				</div>
			</nav>

			{/* Main Content */}
			<main className="max-w-7xl mx-auto p-6">
				<AnimatePresence mode="wait">
					<motion.div
						key={activeTab}
						initial={{ opacity: 0, y: 10 }}
						animate={{ opacity: 1, y: 0 }}
						exit={{ opacity: 0, y: -10 }}
						transition={{ duration: 0.2 }}
					>
						{activeTab === "chat" ? <ChatInterface /> : <CaseAnalysis />}
					</motion.div>
				</AnimatePresence>
			</main>
		</div>
	);
}

export default App;
						<motion.div
							initial={{ scale: 0.8, opacity: 0, y: 20 }}
							animate={{ scale: 1, opacity: 1, y: 0 }}
							transition={{ duration: 0.8, ease: [0.16, 1, 0.3, 1] }}
							className="text-center relative"
						>
							{/* Animated gradient orb */}
							<motion.div
								animate={{
									scale: [1, 1.2, 1],
									rotate: [0, 180, 360],
								}}
								transition={{
									duration: 4,
									repeat: Infinity,
									ease: "easeInOut"
								}}
								className="absolute -top-32 left-1/2 -translate-x-1/2 w-64 h-64 rounded-full blur-3xl opacity-30"
								style={{
									background: 'radial-gradient(circle, rgba(99,102,241,0.8) 0%, rgba(168,85,247,0.6) 50%, rgba(6,182,212,0.4) 100%)'
								}}
							/>
							
							<motion.div
								animate={{ 
									rotate: [0, 360],
									scale: [1, 1.1, 1]
								}}
								transition={{ 
									duration: 3, 
									repeat: Infinity,
									ease: "linear"
								}}
								className="mb-8 relative"
							>
								<div className="w-24 h-24 mx-auto rounded-3xl bg-gradient-to-br from-primary via-secondary to-accent flex items-center justify-center glow-primary">
									<HiSparkles className="text-5xl text-white" />
								</div>
							</motion.div>
							
							<motion.h1 
								initial={{ opacity: 0, y: 10 }}
								animate={{ opacity: 1, y: 0 }}
								transition={{ delay: 0.3 }}
								className="text-5xl font-display font-bold mb-4 bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent"
							>
								lenis
							</motion.h1>
							<motion.p 
								initial={{ opacity: 0, y: 10 }}
								animate={{ opacity: 1, y: 0 }}
								transition={{ delay: 0.5 }}
								className="text-lg text-muted-foreground font-medium"
							>
								AI-Powered Legal Intelligence
							</motion.p>
							
							<motion.div
								initial={{ opacity: 0, scale: 0.8 }}
								animate={{ opacity: 1, scale: 1 }}
								transition={{ delay: 0.7 }}
								className="mt-8 flex items-center justify-center gap-1"
							>
								{[0, 1, 2].map((i) => (
									<motion.div
										key={i}
										animate={{
											scale: [1, 1.2, 1],
											opacity: [0.5, 1, 0.5]
										}}
										transition={{
											duration: 1.5,
											repeat: Infinity,
											delay: i * 0.2
										}}
										className="w-2 h-2 rounded-full bg-primary"
									/>
								))}
							</motion.div>
						</motion.div>
					</motion.div>
				) : (
					<motion.div
						key="mainApp"
						initial={{ opacity: 0 }}
						animate={{ opacity: 1 }}
						transition={{ duration: 0.5 }}
						className="flex h-screen gradient-mesh"
					>
						{/* Sidebar Navigation */}
						<motion.nav
							initial={{ x: -100, opacity: 0 }}
							animate={{ x: 0, opacity: 1 }}
							transition={{ delay: 0.1, type: "spring", stiffness: 100 }}
							className="w-20 bg-sidebar/80 backdrop-blur-xl border-r border-sidebar-border flex flex-col items-center py-6 relative z-10"
							style={{
								boxShadow: '4px 0 24px rgba(0, 0, 0, 0.05)'
							}}
						>
							{/* Logo */}
							<motion.div 
								whileHover={{ scale: 1.05, rotate: 5 }}
								whileTap={{ scale: 0.95 }}
								className="mb-8 cursor-pointer"
							>
								<div className="w-12 h-12 rounded-2xl bg-gradient-to-br from-primary via-secondary to-accent flex items-center justify-center shadow-premium">
									<HiSparkles className="text-2xl text-white" />
								</div>
							</motion.div>

							<div className="flex-1 flex flex-col gap-4">
								{/* Chat Button */}
								<motion.button
									whileHover={{ scale: 1.05, x: 2 }}
									whileTap={{ scale: 0.95 }}
									onClick={() => setActiveComponent("chat")}
									className={`relative w-14 h-14 rounded-2xl flex items-center justify-center transition-all duration-300 group ${
										activeComponent === "chat"
											? "bg-gradient-to-br from-primary to-primary-dark text-white shadow-premium"
											: "bg-card/50 text-muted-foreground hover:bg-card hover:text-foreground"
									}`}
								>
									{activeComponent === "chat" && (
										<motion.div
											layoutId="activeTab"
											className="absolute inset-0 rounded-2xl bg-gradient-to-br from-primary to-primary-dark glow-primary"
											transition={{ type: "spring", bounce: 0.2, duration: 0.6 }}
										/>
									)}
									<HiOutlineChat className="text-2xl relative z-10" />
									
									{/* Tooltip */}
									<motion.div
										initial={{ opacity: 0, x: -10 }}
										whileHover={{ opacity: 1, x: 0 }}
										className="absolute left-full ml-4 px-3 py-2 bg-card rounded-lg shadow-premium whitespace-nowrap pointer-events-none text-sm font-medium"
									>
										Legal Chat
									</motion.div>
								</motion.button>

								{/* Case Analysis Button */}
								<motion.button
									whileHover={{ scale: 1.05, x: 2 }}
									whileTap={{ scale: 0.95 }}
									onClick={() => setActiveComponent("caseAnalysis")}
									className={`relative w-14 h-14 rounded-2xl flex items-center justify-center transition-all duration-300 group ${
										activeComponent === "caseAnalysis"
											? "bg-gradient-to-br from-secondary to-accent text-white shadow-premium"
											: "bg-card/50 text-muted-foreground hover:bg-card hover:text-foreground"
									}`}
								>
									{activeComponent === "caseAnalysis" && (
										<motion.div
											layoutId="activeTab"
											className="absolute inset-0 rounded-2xl bg-gradient-to-br from-secondary to-accent"
											style={{
												boxShadow: '0 0 30px rgba(168, 85, 247, 0.5)'
											}}
											transition={{ type: "spring", bounce: 0.2, duration: 0.6 }}
										/>
									)}
									<HiOutlineScale className="text-2xl relative z-10" />
									
									{/* Tooltip */}
									<motion.div
										initial={{ opacity: 0, x: -10 }}
										whileHover={{ opacity: 1, x: 0 }}
										className="absolute left-full ml-4 px-3 py-2 bg-card rounded-lg shadow-premium whitespace-nowrap pointer-events-none text-sm font-medium"
									>
										Case Analysis
									</motion.div>
								</motion.button>
							</div>

							{/* Theme Toggle at Bottom */}
							<div className="mt-auto">
								<ThemeToggle />
							</div>
						</motion.nav>

						{/* Main Content Area */}
						<div className="flex-1 flex flex-col overflow-hidden">
							{/* Header */}
							<motion.header
								initial={{ y: -50, opacity: 0 }}
								animate={{ y: 0, opacity: 1 }}
								transition={{ delay: 0.2, type: "spring", stiffness: 100 }}
								className="bg-card/50 backdrop-blur-xl border-b border-sidebar-border px-8 py-5 flex items-center justify-between relative z-10"
								style={{
									boxShadow: '0 4px 24px rgba(0, 0, 0, 0.03)'
								}}
							>
								<div className="flex items-center gap-4">
									<motion.div
										animate={{
											rotate: activeComponent === "chat" ? 0 : 360
										}}
										transition={{ duration: 0.5 }}
										className="w-10 h-10 rounded-xl bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center"
									>
										{activeComponent === "chat" ? (
											<HiOutlineChat className="text-xl text-primary dark:text-primary-light" />
										) : (
											<HiOutlineScale className="text-xl text-secondary" />
										)}
									</motion.div>
									<div>
										<h1 className="text-2xl font-display font-bold text-foreground">
											{activeComponent === "chat" ? "Legal Chat Assistant" : "Case Analysis"}
										</h1>
										<p className="text-sm text-muted-foreground">
											{activeComponent === "chat" 
												? "Get instant legal insights powered by AI" 
												: "Comprehensive case evaluation and strategy"
											}
										</p>
									</div>
								</div>

								<div className="flex items-center gap-3">
									<motion.div
										animate={{
											scale: [1, 1.05, 1],
										}}
										transition={{
											duration: 2,
											repeat: Infinity,
											ease: "easeInOut"
										}}
										className="px-4 py-2 rounded-full bg-gradient-to-r from-primary/10 to-secondary/10 border border-primary/20 flex items-center gap-2"
									>
										<div className="w-2 h-2 rounded-full bg-primary animate-pulse-glow" />
										<span className="text-xs font-semibold text-primary dark:text-primary-light">
											AI Active
										</span>
									</motion.div>
								</div>
							</motion.header>

							{/* Component Container */}
							<div className="flex-1 overflow-hidden relative">
								<AnimatePresence mode="wait">
									<motion.div
										key={activeComponent}
										initial={{ opacity: 0, y: 20, scale: 0.98 }}
										animate={{ opacity: 1, y: 0, scale: 1 }}
										exit={{ opacity: 0, y: -20, scale: 0.98 }}
										transition={{ duration: 0.4, ease: [0.16, 1, 0.3, 1] }}
										className="h-full overflow-auto p-8"
									>
										{activeComponent === "caseAnalysis" ? <CaseAnalysis /> : <ChatInterface />}
									</motion.div>
								</AnimatePresence>
							</div>
						</div>
					</motion.div>
				)}
			</AnimatePresence>
		</div>
	);
}

export default App;
